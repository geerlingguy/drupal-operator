---
- name: Drupal Settings ConfigMap.
  k8s:
    definition:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: '{{ meta.name }}-drupal-config'
        namespace: '{{ meta.namespace }}'
      data:
        settings.php: |-
          <?php

          $databases['default']['default'] = array(
            'database' => '{{ database_name }}',
            'username' => '{{ database_username }}',
            'password' => '{{ database_password }}',
            'prefix' => '{{ database_prefix }}',
            'host' => '{{ database_host }}',
            'port' => '{{ database_port }}',
            'namespace' => 'Drupal\\Core\\Database\\Driver\\{{ database_driver }}',
            'driver' => '{{ database_driver }}',
          );

          $settings['hash_salt'] = '{{ drupal_hash_salt | default(lookup('password', '/dev/null chars=ascii_letters'), true) }}';
          $settings['trusted_host_patterns'] = ['{{ drupal_trusted_host_patterns | default('^.+$', true) }}'];

- name: Drupal files PVC.
  k8s:
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: '{{ meta.name }}-files-pvc'
        namespace: '{{ meta.namespace }}'
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: '{{ files_pvc_size }}'

- name: Drupal Deployment.
  k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ meta.name }}-drupal'
        namespace: '{{ meta.namespace }}'
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: drupal
        template:
          metadata:
            labels:
              app: drupal
          spec:
            containers:
              - name: drupal
                image: "{{ drupal_image }}"
                ports:
                  - containerPort: 80
                livenessProbe:
                  tcpSocket:
                    port: 80
                  initialDelaySeconds: 60
                readinessProbe:
                  tcpSocket:
                    port: 80
                  initialDelaySeconds: 30
                volumeMounts:
                  - mountPath: /var/www/html/sites/default/
                    name: drupal-settings
                  - mountPath: /var/www/html/sites/default/files/
                    name: drupal-files
            volumes:
              - name: drupal-settings
                configMap:
                  name: '{{ meta.name }}-drupal-config'
              - name: drupal-files
                persistentVolumeClaim:
                  claimName: '{{ meta.name }}-files-pvc'

- name: Drupal Service
  k8s:
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: '{{ meta.name }}'
        namespace: '{{ meta.namespace }}'
      spec:
        type: NodePort
        ports:
          - port: 80
            targetPort: 80
        selector:
          app: 'drupal'

- name: Drupal Ingress
  k8s:
    state: "{{ 'present' if manage_ingress else 'absent' }}"
    definition:
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: '{{ meta.name }}'
        namespace: '{{ meta.namespace }}'
      spec:
        rules:
          - host: '{{ drupal_hostname }}'
            http:
              paths:
                - path: /
                  backend:
                    serviceName: '{{ meta.name }}'
                    servicePort: 80

- include_tasks: database.yml
